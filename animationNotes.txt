Simple Animations 

Most animations performed with motion component and animate prop

Props:
- animate={{ x: 100}}  : x: number y: number rotate: number
- transition={{ ease: "easeOut", duration: 2 }}


AnimatePresence is a component that can wrap 
a motion div so that components can perform an
exit animations

- exit={{ opacity: 0 }}



Values can be passed in as keyframes through an array
- animate={{ x: [0, 100, 0] }}
passinf null as the initial value sets it as the current value

Variants help you propogate animations through the dom 
- const variants = {
    visible: { opacity: 1},
    hidden: { opacity: 0},
}

now you can pass them as a  prop
<motion.div variants={variants} />


you can assign time placement of animations
with a string prop 

<motion.div 
    initial="hidden" // Now the component will start with the hidden properties styles
    animate="visible" // Now the component will animte to the styles in the animate property
    variants={variants}

Animtations can be orchestrated when using variants
variants gain extra access to additional transition
props like 
- when
- delayChildren
- staggerChildren

these give control to the parent to orchestrate
the animations of its children

ex: const list = {
  visible: {
    opacity: 1,
    transition: {
      when: "beforeChildren",
      staggerChildren: 0.3,
    },
  },
  hidden: {
    opacity: 0,
    transition: {
      when: "afterChildren",
    },
  },
}


variants can also be dynamic in the form of functions

ex:  const variants = {
  visible: i => ({
    opacity: 1,
    transition: {
      delay: i * 0.3,
    },
  }),
  hidden: { opacity: 0 },
}

return items.map((item, i) => (
  <motion.li
    custom={i}
    animate="visible"
    variants={variants}
  />
))



Features that dont support hardware acceleration

    The motion component has on onUpdate prop.
    The value is passed in as a motion value via the style prop.
    repeatDelay is set.
    repeatType is set as "mirror".
    damping is set to 0.


Try to use variants for more complicated animations
and if theres repetention or if its hard to repeatDelay
variants are sets that have predefined animation objects

ex:

const buttonVariants = {

    hover: {

      scale: 1.5,

    },
    pressed: {

      scale: 0.5,

    },

    rest: {

      scale: 1,

    },

  };


  return (

    <motion.button

      initial="rest"

      whileHover="hover"

      whileTap="pressed"

      variants={buttonVariants}

    >

      Click me!

    </motion.button>
  )
  


  dynamic variables can be passed into a variant, variants
  can be statically defined to me defined as a function
  on a property
